## 外观模式
外观模式他的是隐藏了系统的复杂性，并向客户端提供了一个可以访问的接口，这种设计是结构行模式，为子系统中的一组接口提供了一个同意的访问接口，这个接口使得子系统更容易被访问或者使用。
##### 优点：
- 松散耦合：
　使得客户端和子系统之间解耦，让子系统内部的模块功能更容易扩展和维护；
- 简单易用：客户端根本不需要知道子系统内部的实现，或者根本不需要知道子系统内部的构成，它只需要跟Facade类交互即可。
- 更好的划分访问层次：有些方法是对系统外的，有些方法是系统内部相互交互的使用的。子系统把那些暴露给外部的功能集中到门面中，这样就可以实现客户端的使用，很好的隐藏了子系统内部的细节

##### 缺点：
- 不能很好地限制客户使用子系统类，如果对客户访问子系统类做太多的限制则减少了可变性和灵活性。
- 在不引入抽象外观类的情况下，增加新的子系统可能需要修改外观类或客户端的源代码，违背了“开闭原则”。