## 装饰者模式
### 角色介绍;
- 抽象组件：Component，
可以是一个接口或者是一个抽象的对象，其纯当的是一个被装饰的原始对象
- 组件的具体实现类： Man 也是我们装饰的具体对象
- 抽象装饰者： PersonCloth,装饰我们组件的对象
- 装饰者具体实现类 ：Goodcolth/NomalColth 
#### 优点：
- 装饰模式与继承关系的目的都是要扩展对象的功能，但是装饰模式可以提供比继承更多的灵活性。装饰模式允许系统动态决定“贴上”一个需要的“装饰”，或者除掉一个不需要的“装饰”。继承关系则不同，继承关系是静态的，它在系统运行前就决定了
- 通过使用不同的具体装饰类以及这些装饰类的排列组合，设计师可以创造出很多不同行为的组合。

#### 缺点：
- 对象变多了

#### 与代理模式区别：
- 装饰者模式是对客户端透明的方式来拓展对象的功能，是继承关系的一个替代方案；
- 代理模式则是给一个对象提供一个代理的对象 对代理的对象施加控制，但是对对象的功能不增强；