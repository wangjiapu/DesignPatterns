## 解释器模式
#### 角色介绍：
###### AbstarctExpression：抽象表达式
声明一个抽象的解释器操作父类，并定义一个抽象的解释方法，其具体的实现在各个具体的子类解释器中完成。
###### TerminalExpression：终结符表达式
实现文法中与终结符有关的解释操作，文法中每一个终结符都有一个具体的中介表达式与之对应。
###### NonterminalExpression :非终结符表达式
实现文法中与非终结符有关的解释操作
###### Context；上下文环境类。
包含解释器之外的全局信息
###### clident:客户端
解析表达式，构建抽象语法树，执行具体的解释操作等。

#### 优点：
- 灵活的扩展性。
#### 缺点：
- 文法多的话则会有大量的类，语法树变得繁琐不堪。