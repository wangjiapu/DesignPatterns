

代理模式的定义：
    给某一个对象提供一个代理，并由代理对象控制对原对象的引用。
代理模式包含如下角色：
    ISubject：抽象主题角色，是一个接口。该接口是对象和它的代理共用的接口。
    RealSubject：真实主题角色，是实现抽象主题接口的类。
    Proxy：代理角色，内部含有对真实对象RealSubject的引用，从而可以操作真实对象。
    代理对象提供与真实对象相同的接口，以便在任何时刻都能代替真实对象。
    同时，代理对象可以在执行真实对象操作时，附加其他的操作，相当于对真实对象进行封装。
    实现动态代理的关键技术是反射。

静态代理：
    静态代理比较简单，是由程序员编写的代理类，
    并在程序运行前就编译好的，而不是由程序动态产生代理类，这就是所谓的静态。
    一般来说，对代理模式而言，一个主题类与一个代理类一一对应，这也是静态代理模式的特点。
动态代理：
    多个主题类对应一个代理类，共享“前处理，后处理”功能，动态调用所需主题，
    大大减小了程序规模，这就是动态代理模式的特点